--By Lyno rn--
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 
          This File is Protected By Lyno

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==6) then v29=nil;function v29()local v31=0 -0 ;local v32;local v33;local v34;local v35;local v36;local v37;local v38;while true do if ((1912 -(533 + 1378))==v31) then v34=nil;v35=nil;v31=2 + 0 ;end if (v31==(4 -1)) then v38=nil;while true do local v76=0 -0 ;while true do if (v76==1) then if (v32==(970 -(500 + 468))) then for v103=1,v24() do local v104=0;local v105;local v106;local v107;while true do if (1==v104) then v107=nil;while true do if (v105~=1) then else while true do if (v106~=(0 + 0)) then else v107=v22();if (v21(v107,2 -1 ,1)==0) then local v127=0;local v128;local v129;local v130;local v131;local v132;while true do if (v127==0) then v128=0;v129=nil;v127=1;end if (v127~=(2 -1)) then else v130=nil;v131=nil;v127=566 -(508 + 56) ;end if (v127==(2 -0)) then v132=nil;while true do if (v128==0) then local v176=0;while true do if (v176~=0) then else v129=0;v130=nil;v176=1 + 0 ;end if (1==v176) then v128=1054 -(648 + 405) ;break;end end end if (v128==(1 + 0)) then local v177=0;while true do if (v177~=0) then else v131=nil;v132=nil;v177=1;end if ((1 -0)==v177) then v128=1 + 1 ;break;end end end if (v128==(2 + 0)) then while true do if (v129==(13 -10)) then if (v21(v131,1709 -(465 + 1241) ,8 -5 )==(455 -(129 + 325))) then v132[4]=v38[v132[4]];end v33[v103]=v132;break;end if (v129==0) then local v246=0;local v247;local v248;while true do if (v246~=0) then else v247=0 + 0 ;v248=nil;v246=1;end if (v246~=(336 -(328 + 7))) then else while true do if (0==v247) then v248=0;while true do if (v248~=(1039 -(536 + 502))) then else v129=1;break;end if (v248~=0) then else local v314=0;while true do if (v314~=0) then else v130=v21(v107,4 -2 ,1 + 2 );v131=v21(v107,4,6);v314=1;end if (v314~=1) then else v248=1 -0 ;break;end end end end break;end end break;end end end if (v129==2) then local v249=0 -0 ;local v250;while true do if (v249==0) then v250=1883 -(969 + 914) ;while true do if ((0 + 0)~=v250) then else local v292=930 -(476 + 454) ;while true do if (v292==1) then v250=1;break;end if (v292~=(0 -0)) then else if (v21(v131,2 -1 ,1)==(1 -0)) then v132[2]=v38[v132[7 -5 ]];end if (v21(v131,784 -(568 + 214) ,1 + 1 )~=(1 + 0)) then else v132[1914 -(402 + 1509) ]=v38[v132[3]];end v292=1966 -(780 + 1185) ;end end end if (v250~=(738 -(639 + 98))) then else v129=3;break;end end break;end end end if (1~=v129) then else local v251=0;local v252;local v253;while true do if (1==v251) then while true do if (v252==(0 -0)) then v253=0;while true do if (v253~=(3 -2)) then else v129=3 -1 ;break;end if (0==v253) then v132={v23(),v23(),nil,nil};if (v130==0) then local v334=0 -0 ;local v335;while true do if (v334~=(339 -(111 + 228))) then else v335=414 -(208 + 206) ;while true do if (0==v335) then v132[1192 -(1082 + 107) ]=v23();v132[4]=v23();break;end end break;end end elseif (v130==1) then v132[3]=v24();elseif (v130==(1 + 1)) then v132[3]=v24() -(2^16) ;elseif (v130~=3) then else local v351=0;local v352;local v353;while true do if (v351~=0) then else v352=0;v353=nil;v351=1 + 0 ;end if ((1664 -(351 + 1312))==v351) then while true do if (0==v352) then v353=184 -(21 + 163) ;while true do if (v353==(922 -(793 + 129))) then v132[14 -11 ]=v24() -((1449 -(1133 + 314))^(15 + 1)) ;v132[4]=v23();break;end end break;end end break;end end end v253=1;end end break;end end break;end if (v251==(0 -0)) then v252=0;v253=nil;v251=1 + 0 ;end end end end break;end end break;end end end break;end end break;end if (v105~=(0 + 0)) then else local v119=0;while true do if ((0 + 0)~=v119) then else v106=1833 -(321 + 1512) ;v107=nil;v119=1 + 0 ;end if ((1 + 0)==v119) then v105=1;break;end end end end break;end if (v104~=(0 -0)) then else v105=0;v106=nil;v104=1 + 0 ;end end end for v108=1,v24() do v34[v108-(1 + 0) ]=v29();end for v110=1 -0 ,v24() do v35[v110]=v24();end return v36;end break;end if (v76~=(0 -0)) then else if (0==v32) then local v96=207 -(76 + 131) ;while true do if (v96==(1609 -(1351 + 256))) then v32=1;break;end if (1==v96) then v35={};v36={v33,v34,nil,v35};v96=1169 -(181 + 986) ;end if (v96==(0 -0)) then v33={};v34={};v96=1;end end end if (v32~=(3 -2)) then else local v97=0;local v98;while true do if (v97~=0) then else v98=0;while true do if (v98==(679 -(180 + 497))) then v32=2 + 0 ;break;end if (v98==(1 + 0)) then local v116=0;while true do if (v116==(0 -0)) then for v121=272 -(194 + 77) ,v37 do local v122=561 -(161 + 400) ;local v123;local v124;local v125;local v126;while true do if (v122~=(1 + 1)) then else while true do if (v123==0) then v124=293 -(6 + 287) ;v125=nil;v123=1;end if (v123~=1) then else v126=nil;while true do if (v124==(1 -0)) then if (v125==(1 + 0)) then v126=v22()~=0 ;elseif (v125==2) then v126=v25();elseif (v125==(11 -8)) then v126=v26();end v38[v121]=v126;break;end if (v124~=(1559 -(504 + 1055))) then else local v229=0 + 0 ;local v230;while true do if (v229==0) then v230=0;while true do if (v230~=0) then else local v291=0;while true do if (v291==(1 + 0)) then v230=1 + 0 ;break;end if (v291~=0) then else v125=v22();v126=nil;v291=1238 -(618 + 619) ;end end end if ((1 + 0)~=v230) then else v124=3 -2 ;break;end end break;end end end end break;end end break;end if (v122~=0) then else v123=0 -0 ;v124=nil;v122=1;end if (v122~=1) then else v125=nil;v126=nil;v122=2;end end end v36[3]=v22();v116=1546 -(1029 + 516) ;end if (v116~=1) then else v98=2;break;end end end if (v98==(0 + 0)) then v37=v24();v38={};v98=1;end end break;end end end v76=1;end end end break;end if (v31~=0) then else v32=0 + 0 ;v33=nil;v31=821 -(371 + 449) ;end if (v31==2) then v36=nil;v37=nil;v31=815 -(782 + 30) ;end end end v30=nil;v18=7;end if (v18==7) then function v30(v39,v40,v41)local v42=0;local v43;local v44;local v45;while true do if (v42==0) then v43=v39[1];v44=v39[2];v42=1;end if (v42==1) then v45=v39[3];return function(...)local v77=0;local v78;local v79;local v80;local v81;local v82;while true do if (v77==0) then v78=1;v79= -1;v77=1;end if (v77==3) then A,B=v28(v11(v82));if  not A[1] then local v99=v39[4][v78] or "?" ;error("Script error at ["   .. v99   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end if (v77==2) then v82=nil;function v82()local v86=v43;local v87=v44;local v88=v45;local v89=v28;local v90={};local v91={};local v92={};for v100=1713 -(708 + 1005) ,v81 do if ((v100>=v88) or ((14047 -10148)<=(3566 -(922 + (1447 -952))))) then v90[v100-v88 ]=v80[v100 + (1 -0) ];else v92[v100]=v80[v100 + 1 + 0 ];end end local v93=(v81-v88) + (1917 -(920 + (1716 -720))) ;local v94;local v95;while true do local v101=1996 -(1924 + 72) ;local v102;while true do if (((6360 -4203)>=(1584 + 383)) and (v101==((0 -0) -0))) then v102=0;while true do if ((v102==((133 -74) -(50 + 9))) or ((3588 -(1258 + 578))>(1219 + 3136))) then v94=v86[v78];v95=v94[1 + 0 ];v102=1923 -(1628 + 294) ;end if ((v102==(1518 -(458 + 1059))) or ((3726 + 166)>(3426 + 1070))) then if (((2640 + 750)>(1000 -699)) and (v95<=(69 -50))) then if (((5904 -3591)<=(4496 -(794 + 433))) and (v95<=(1485 -(258 + 1218)))) then if ((v95<=(3 + 1)) or ((392 + 3889)<(22 + 45))) then if (((371 + (2771 -2077))<((1276 -988) + 1045)) and (v95<=(1 + 0))) then if ((((1628 -806) + 1630)<=(522 + 2761)) and (v95>(0 -0))) then if ((v94[1156 -(1148 + 6) ]==v92[v94[11 -7 ]]) or ((4042 -2575)==((870 -(570 + 76)) -(114 + 2)))) then v78=v78 + (111 -(19 + 91)) ;else v78=v94[(1 + 4) -2 ];end else v78=v94[3];end elseif ((((6068 -(166 + 628)) -(49 + 224 + 105))>=(5777 -(269 + 725))) and (v95<=(1052 -(53 + 997)))) then v92[v94[2 + 0 ]]=v94[1582 -(1119 + 426 + 34) ];elseif ((v95==(3 + 0)) or ((3320 -(14 + 5))<(3707 -(1174 + 763)))) then v41[v94[303 -(29 + (586 -(7 + 308))) ]]=v92[v94[(3727 -1906) -(423 + 1396) ]];else v92[v94[1396 -(80 + 175 + 1139) ]][v94[6 -3 ]]=v94[3 + 1 ];end elseif ((v95<=6) or ((1492 -((2149 -(353 + 1640)) + 114))>=((5282 -(338 + 112)) -((1409 -763) + (1642 -1009))))) then if (((6544 -4446)>=102) and (v95>(1749 -(542 + 1202)))) then local v136=0 -0 ;local v137;local v138;while true do if (((6168 -(291 + 8 + 1419))>(84 + 229)) and (((4305 -2837) -(137 + 1331))==v136)) then v137=v94[8 -5 ];v138=v92[v137];v136=260 -(33 + 226) ;end if (((3263 -(1329 + 75))==(2170 -(100 + (956 -(459 + 286))))) and (v136==1)) then for v243=v137 + 1 + 0 ,v94[2 + 0 + (1416 -(427 + 987)) ] do v138=v138   .. v92[v243] ;end v92[v94[2 + 0 ]]=v138;break;end end else v92[v94[550 -(92 + 456) ]]={};end elseif (((6008 -(1062 + 100))==(6800 -(848 + 1106))) and (v95<=(13 -6))) then local v140=0 -0 ;local v141;while true do if (((9931 -5421)>(3441 + 471)) and (v140==(0 -0))) then v141=v92[v94[(528 -(58 + 464)) -2 ]];if (((3113 -1246)==(222 + 1645)) and v141) then v78=v78 + (1 -0) ;else local v254=0 + 0 ;local v255;local v256;while true do if (((3492 -1268)<(13224 -9727)) and (v254==(1 + 0))) then while true do if ((v255==(1708 -(33 + (2497 -822)))) or ((11128 -6162)<(1664 + 128))) then v256=0 -0 ;while true do if (((2482 -((666 -317) + 1545))<=(3312 -((1439 -829) + 88))) and (v256==(0 -(0 + 0)))) then v92[v94[1 + 0 + 1 ]]=v141;v78=v94[7 -4 ];break;end end break;end end break;end if (((1434 -243)<=(9028 -5593)) and (v254==(1933 -(1572 + 361)))) then v255=0;v256=nil;v254=478 -(428 + 23 + 26) ;end end end break;end end elseif (((68 + 3784)==(2942 + 910)) and (v95>(20 -12))) then local v183=(356 -(260 + 96)) + 0 ;local v184;local v185;local v186;local v187;while true do if (((5873 -(494 + 502))>2105) and ((1337 -(962 + 375))==v183)) then v184=71 -(40 + 31) ;v185=nil;v183=(2379 -(97 + 949)) -(1053 + 279) ;end if (((1502 -475)>=(47 + 14)) and (((18 -14) -3)==v183)) then local v257=939 -(354 + 433 + 152) ;while true do if ((v257==(0 -0)) or ((1254 + 1712)==(2846 -(1458 + 459)))) then v186=nil;v187=nil;v257=1 + (1647 -(722 + 925)) ;end if (((3209 -1749)==(826 + 634)) and (v257==(2 -1))) then v183=7 -5 ;break;end end end if ((v183==(2 -0)) or ((1699 + 1798 + 1186)<((1179 -753) + 1054))) then while true do if (((407 -(439 -165))<(1387 + 297)) and (v184==(0 + 0))) then local v278=0;while true do if ((v278==(67 -(55 + (24 -13)))) or ((896 + 2031)<=(2781 -(1116 + 307)))) then v184=1 -0 ;break;end if ((3309==(4950 -(495 + 1146))) and ((0 + 0)==v278)) then v185=v94[7 -5 ];v186=v92[v185 + 2 + 0 + 0 ];v278=1 + 0 ;end end end if (((1668 -(210 + 397))<(3957 -(392 + 425))) and (v184==(2 + 0))) then if ((v186>(0 -0)) or ((1110 + 1605)>(2674 + 1357))) then if ((v187<=v92[v185 + (1 -0) ]) or (((4118 -(988 + 242)) -(1145 + 14))>2329)) then local v301=0 -0 ;local v302;while true do if ((v301==(957 -(530 + 427))) or ((9711 -5569)<=(581 + 138))) then v302=0 + 0 ;while true do if ((v302==((0 -0) + 0)) or ((2735 -1748)<(1219 -735))) then v78=v94[(1 -0) + 2 ];v92[v185 + 1 + 2 ]=v187;break;end end break;end end end elseif ((((16830 -(174 + 466)) -11336)>(7044 -4552)) and (v187>=v92[v185 + (29 -(5 + 23)) ])) then local v303=0 + 0 ;local v304;while true do if ((v303==(164 -(138 + 26))) or ((648 -(337 + 76))>=(17633 -13025))) then v304=0 + (0 -0) ;while true do if (((2023 -(977 + 73))<(3326 -(276 + 1241))) and (v304==(0 + 0))) then v78=v94[421 -(413 + 5) ];v92[v185 + 3 ]=v187;break;end end break;end end end break;end if ((v184==((3 -2) + 0)) or ((4113 -2205)>=((3022 + 1218) -(861 + 390)))) then local v279=0 + 0 ;local v280;while true do if ((v279==(0 + 0)) or ((4603 -(544 + 595))==1016)) then v280=0 + 0 ;while true do if ((v280==(0 -0)) or ((3207 -(199 + 517))<=(981 + 458))) then local v317=0 + (0 -0) ;while true do if (((1761 -(843 + 917))==v317) or ((1012 + 250)>(2294 -(70 + 62 + 109)))) then v280=1 + 0 ;break;end if (((2048 -(678 + 98))>(4859 -(3877 -(197 + 22)))) and (v317==(0 + 0))) then v187=v92[v185] + v186 ;v92[v185]=v187;v317=1 + 0 ;end end end if (((395 + 685)<=(2898 -(537 + 1235))) and (v280==(603 -(491 + 111)))) then v184=1 + 1 ;break;end end break;end end end end break;end end else local v188=0 + 0 ;local v189;local v190;while true do if (((6166 -(74 + 1369))>(11135 -6783)) and (v188==(1509 -((3251 -(972 + 1000)) + 229)))) then while true do if (((0 + 0)==v189) or ((5759 -(279 + 553))<(2104 -(1363 + (1139 -(677 + 260)))))) then v190=v94[6 -4 ];v92[v190]=v92[v190](v92[v190 + 1 + 0 ]);break;end end break;end if ((v188==(0 -0)) or (((2604 -(941 + 517)) -(493 + 52 + 437))>(2650 -(764 + 739)))) then v189=0 -0 ;v190=nil;v188=1376 -(13 + 1362) ;end end end elseif ((v95<=((2354 -(992 + 149)) -(930 + 269))) or ((2719 -(357 + 116))<1363)) then if ((3451<=(10063 -6371)) and (v95<=(1029 -(893 + 125)))) then if ((v95==(2 + 5 + (4 -1))) or ((7549 -4057)<=(2091 -476))) then v92[v94[1727 -((3173 -1640) + 192) ]]=v92[v94[1914 -(892 + 1019) ]][v92[v94[17 -13 ]]];elseif (((586 + 386 + 1538)>=(278 + 2013)) and (v92[v94[1907 -(1440 + 465) ]]==v92[v94[4 + 0 ]])) then v78=v78 + (1839 -((2529 -(21 + 1075)) + 405)) ;else v78=v94[3 -0 ];end elseif (((3152 + 723)==(1002 + 2873)) and (v95<=(2 + 6 + 4))) then local v144=0 + (0 -0) ;local v145;local v146;local v147;while true do if ((v144==(0 -0)) or (((773 + 1057) -499)>=(8976 -4479))) then v145=v94[5 -3 ];v146=v92[v145];v144=1 + 0 ;end if (((5768 -(187 + 463 + 192))>=(1971 + 1156)) and (v144==1)) then v147=v92[v145 + (1268 -(560 + 706)) ];if ((v147>(0 + 0)) or ((4448 -(120 + 232))<=(3687 -2380))) then if ((v146>v92[v145 + (3 -2) ]) or ((4475 -(489 + 826))<(4447 -(536 + 937)))) then v78=v94[6 -(291 -(257 + 31)) ];else v92[v145 + (588 -(365 + 220)) ]=v146;end elseif ((4603>(12400 -8611)) and (v146<v92[v145 + (887 -((1411 -(466 + 623)) + 564)) ])) then v78=v94[2 + 1 ];else v92[v145 + (13 -10) ]=v146;end break;end end elseif ((v95>13) or ((2105 -(265 + 1040))==510)) then local v192=0 + 0 ;local v193;local v194;local v195;while true do if (((3758 -(1650 + 6))>((757 + 5010) -4140)) and (v192==(0 -0))) then v193=480 -(379 + 101) ;v194=nil;v192=1 -0 ;end if ((((1899 -(811 + 133)) + 3951)==(5135 -(210 + 19))) and ((2 -1)==v192)) then v195=nil;while true do if ((v193==(1844 -(243 + 1601))) or ((2146 -(723 + (1736 -631)))>(1243 + 2204))) then local v283=1853 -(792 + 1061) ;while true do if ((v283==(732 -(653 + 79))) or ((16128 -11796)<=(5069 -(15 + 906)))) then v194=1866 -(519 + 1347) ;v195=nil;v283=1 -0 ;end if (((1624 -(795 + 828))==v283) or ((6228 -4438)<=(617 -383))) then v193=1 -0 ;break;end end end if ((((440 -129) + 1497)>(364 + (663 -(14 + 39)))) and (v193==(1 + 0))) then while true do if (((4554 + 359)==(5226 -(10 + 303))) and (v194==(0 + 0))) then v195=v94[1627 -(1215 + 410) ];v92[v195](v13(v92,v195 + (2 -1) ,v79));break;end end break;end end break;end end else for v238=v94[4 -2 ],v94[1605 -((1276 -(609 + 556)) + (2269 -(503 + 275))) ] do v92[v238]=nil;end end elseif (((8632 -4374)<=(15581 -10706)) and (v95<=(6 + 10))) then if (((6065 -(368 + 1119))>=(6312 -(715 + 1149))) and (v95==(54 -39))) then local v148=0 + 0 ;local v149;local v150;while true do if ((715<(6825 -5056)) and (v148==(0 -0))) then v149=0 + 0 ;v150=nil;v148=3 -2 ;end if (((4119 -2575)>(661 -367)) and (1==v148)) then while true do if ((667==(413 + 254)) and (v149==(0 + 0))) then v150=v94[(8 -5) -1 ];v92[v150]=v92[v150]();break;end end break;end end else local v151=(625 + 290) -(562 + 353) ;local v152;local v153;while true do if ((v151==(1416 -(194 + 1221))) or (1990<=(2212 -((507 -260) + 1052)))) then while true do if ((v152==(0 -0)) or ((2188 -(586 + 348))==(4517 -(68 + 934)))) then v153=v94[258 -(4 + 252) ];v92[v153](v92[v153 + (2 -1) ]);break;end end break;end if (((8081 -5330)>=(296 -125)) and ((905 -(145 + 760))==v151)) then v152=0 + 0 ;v153=nil;v151=1 + 0 ;end end end elseif ((v95<=(1848 -(757 + 1074))) or (((2496 -(600 + 864)) -(118 + (490 -299)))>(3353 + (951 -(700 + 21))))) then local v154=v94[2 + 0 ];local v155=v94[13 -9 ];local v156=v154 + ((1 + 4) -3) ;local v157={v92[v154](v92[v154 + (1 -(318 -(31 + 287))) ],v92[v156])};for v173=1958 -(1734 + 223) ,v155 do v92[v156 + v173 ]=v157[v173];end local v158=v157[709 -((423 -122) + 196 + 211) ];if (v158 or ((5286 -1803)>=(131 + 1713 + 2195))) then local v196=193 -(161 + 32) ;while true do if ((v196==(0 + 0)) or (2485==(10280 -(2023 + 4770)))) then v92[v156]=v158;v78=v94[1 + 2 ];break;end end else v78=v78 + (1412 -(1062 + (1146 -797))) ;end elseif ((v95>(59 -41)) or ((456 + 127 + 1473)<=(238 + 579))) then v92[v94[1 + 1 ]]=v92[v94[549 -(260 + 286) ]] -v94[998 -(126 + 868) ] ;else local v198=596 -(87 + 509) ;local v199;local v200;local v201;while true do if ((v198==(3 -2)) or ((3551 -(50 + 1927))==(612 + 2637))) then v201=nil;while true do if ((v199==(1664 -(943 + 721))) or ((644 -(2119 -(1220 + 613)))>=2681)) then v200=v94[(1692 -554) -(422 + 714) ];v201=v92[v94[(884 -(684 + 198)) + 1 ]];v199=1;end if ((v199==(2 -1)) or ((5441 -(1399 + 58))==(20864 -16472))) then v92[v200 + (804 -(595 + 208)) ]=v201;v92[v200]=v201[v94[1687 -(239 + 1444) ]];break;end end break;end if ((v198==(1270 -(585 + 685))) or ((5240 -(129 + 239))<(486 -295))) then v199=0 -0 ;v200=nil;v198=1 + 0 ;end end end elseif ((v95<=(37 -8)) or ((1166 + 337)>(1666 + 639))) then if (((29 + 15 + 16)==(51 + (26 -17))) and (v95<=(43 -19))) then if (((2227 -(299 + 267))<=(81 + 13 + 2445)) and (v95<=(34 -13))) then if (((4614 -1709)==(3194 -(229 + 24 + 36))) and (v95==20)) then local v159=(1223 -(859 + 364)) + 0 ;local v160;while true do if ((v159==0) or ((1751 + 108)>=(1196 + (2490 -(1338 + 324))))) then v160=v94[2 -0 ];v92[v160](v13(v92,v160 + (4 -3) ,v94[7 -4 ]));break;end end elseif ((v92[v94[2 -(1684 -(213 + 1471)) ]]==v94[436 -(287 + (328 -183)) ]) or ((79 -(11 + 20))>=2254)) then v78=v78 + (1876 -(827 + 1048)) ;else v78=v94[301 -(247 + (113 -62)) ];end elseif (((3688 -2197)<(8924 -4205)) and (v95<=(1548 -(739 + (1532 -(568 + 177)))))) then if ((v92[v94[1692 -(136 + 1554) ]]<=v92[v94[8 -4 ]]) or (((286 + 3816) -1532)<=(2628 -(165 + 1754)))) then v78=v78 + (129 -(77 + 51)) ;else v78=v94[3];end elseif ((v95==(37 -14)) or ((8826 -4502)<(3836 -(438 + 113)))) then if (v92[v94[117 -((1726 -(1094 + 522)) + 5) ]] or ((2908 -1719)>=(3583 -(806 + 368)))) then v78=v78 + (2 -1) ;else v78=v94[8 -5 ];end else local v204=0 + 0 ;local v205;local v206;local v207;local v208;while true do if ((v204==(662 -(546 + 114))) or ((529 + 4338)<2295)) then for v266=v205,v79 do local v267=0 -0 ;local v268;while true do if ((v267==(665 -(295 + 229 + 141))) or ((4035 -(197 + 106))<=(2947 -(1699 + 89)))) then v268=0 + 0 ;while true do if (((0 + 0 + 0)==v268) or (2272>(9975 -6514))) then v208=v208 + 1 + 0 ;v92[v266]=v206[v208];break;end end break;end end end break;end if (((11 + 4)<(950 + 3371)) and (v204==((1109 -(401 + 708)) + 0))) then v205=v94[1 + 1 ];v206,v207=v89(v92[v205](v13(v92,v205 + (1611 -(1584 + 5 + 21)) ,v94[533 -(305 + 225) ])));v204=1 + 0 ;end if (((1445 -(573 + 249))==(78 + 545)) and (v204==(2 -1))) then local v261=0 -0 ;while true do if (((754 + 2691)>=(277 + 554)) and (v261==(0 + 0))) then v79=(v207 + v205) -(1 + 0) ;v208=0 + 0 ;v261=2 -1 ;end if ((v261==(1 + 0)) or ((3662 -2906)>=(1689 + 2454))) then v204=(2 -1) + 1 ;break;end end end end end elseif (((1407 -(197 + 786))<(4305 -1131)) and (v95<=(4 + 22))) then if ((v95>((721 -(267 + 366)) -63)) or ((4857 -2724)>=(3840 -(292 + 145)))) then v92[v94[1101 -(384 + 715) ]]=v92[v94[3 + 0 ]];else v92[v94[1928 -(1481 + 445) ]]=v40[v94[7 -4 ]];end elseif ((v95<=(4 + 23)) or (((6865 -(55 + 489)) -(697 + 674))<(110 + (1631 -(1579 + 21))))) then local v165=(683 -(109 + 574)) -(1984 -(460 + 1524)) ;local v166;while true do if (((2275 -1494)<=(2122 -(138 + 264))) and (v165==(350 -(132 + 218)))) then v166=v94[(9 -3) -4 ];v92[v166]=v92[v166](v13(v92,v166 + ((3 + 1) -3) ,v94[1 + 2 ]));break;end end elseif (((2220 -(107 + 79))>=(766 + 384)) and (v95>(78 -50))) then do return;end else v92[v94[641 -((2235 -(1289 + 417)) + 110) ]]=v30(v87[v94[1 + 2 ]],nil,v41);end elseif ((((8914 -2126) -3942)<=((14515 -10121) -(152 + 35))) and (v95<=34)) then if (((358 + 313)<=(7773 -4072)) and (v95<=(113 -82))) then if ((v95>(1 + 9 + 20)) or ((320 + 1866)<(542 + 118))) then v92[v94[1 + (1571 -(977 + 593)) ]]=v41[v94[7 -4 ]];else v92[v94[(9 -7) + 0 ]]=v92[v94[4 -1 ]] + v94[6 -2 ] ;end elseif (((4203 -(141 + 1354))==(212 + 2496)) and (v95<=(10 + 22))) then v92[v94[2 -0 ]]= #v92[v94[1938 -(806 + 1129) ]];elseif ((v95>(13 + 7 + 13)) or ((1817 + 564)>=(7712 -5056))) then local v210=0 + 0 ;local v211;local v212;local v213;while true do if ((v210==(0 -0)) or ((2920 -(1155 + 264))==(8444 -5280))) then v211=162 -(144 + 18) ;v212=nil;v210=1 -0 ;end if ((4232>(3106 -(15 + (265 -121)))) and (v210==(1787 -(911 + 875)))) then v213=nil;while true do if ((v211==(0 -0)) or ((212 + (2417 -(126 + 1186)))>=(2006 + 2797))) then v212=0 -0 ;v213=nil;v211=1 + 0 ;end if ((v211==(2 -1)) or ((2634 -(563 + 8 + 122))>(9177 -6977))) then while true do if ((v212==(476 -(158 + 318))) or ((674 + 514)>(7108 -4227))) then v213=v94[2];v92[v213]=v92[v213](v13(v92,v213 + (2 -1) ,v79));break;end end break;end end break;end end else v92[v94[(592 + 485) -(977 + 43 + 55) ]]();end elseif ((v95<=((95 + 999) -(1029 + 28))) or (3876==(7420 -5592))) then if ((v95<=(129 -94)) or ((3185 + 1058)<(4529 -(158 + 354)))) then if ((v94[(4637 -3443) -(11 + 1181) ]<v92[v94[975 -(552 + 419) ]]) or ((220 + 573)>=(717 + 775))) then v78=v78 + (95 -(33 + 61)) ;else v78=v94[3 + 0 ];end elseif ((v95>(21 + 15)) or ((1578 -593)<(2753 -2062))) then v92[v94[(1665 -(1296 + 139)) -(110 + 118) ]]=v92[v94[(28 -22) -3 ]][v94[1437 -(683 + 750) ]];else local v217=948 -(453 + 495) ;local v218;local v219;local v220;while true do if ((v217==(0 -(428 -(410 + 18)))) or ((3068 + 1494)<(39 + 127))) then local v262=0 + 0 ;while true do if (((214 + 2593)==(7951 -5144)) and (v262==(4 -3))) then v217=196 -(103 + 92) ;break;end if (((2085 + 2605)>(4598 -(41 + (3897 -2529)))) and (v262==(0 + 0))) then v218=v94[(2 -0) + 0 + 0 ];v219={v92[v218](v92[v218 + (1 -0) ])};v262=1 + 0 ;end end end if (((7570 -5864)<=(1296 + 956)) and ((1604 -(12 + 1591))==v217)) then v220=1937 -((866 -339) + 1410) ;for v269=v218,v94[11 -7 ] do local v270=1058 -(323 + 735) ;local v271;while true do if ((v270==(0 + 0)) or ((2242 -(671 + 337))>(795 + (6566 -3973)))) then v271=0 + 0 ;while true do if (((5062 -(24 + 1734))>=(2290 -(2258 -1636))) and (v271==(0 + 0))) then v220=v220 + (944 -(403 + 540)) ;v92[v269]=v219[v220];break;end end break;end end end break;end end end elseif ((v95<=(132 -94)) or ((591 + 661)>(8980 -4635))) then v92[v94[5 -(3 + 0) ]][v94[3]]=v92[v94[5 -(1 + 0) ]];elseif (((2242 -(995 + 659))<(2230 -(659 + 670))) and (v95>(7 + 32))) then local v221=0 + 0 ;local v222;local v223;local v224;local v225;local v226;while true do if ((v221==(0 + 0)) or ((5285 -(580 + 397))==(2935 -1338))) then v222=0 + 0 ;v223=nil;v221=223 -(10 + 212) ;end if ((v221==(1 + (2 -1))) or ((3805 -(1170 + 201))>=((1167 + 13359) -11031))) then v226=nil;while true do if (((0 + 0)==v222) or ((651 + 1397)==(3821 -2217))) then local v290=(259 -(31 + 32)) -(47 + 149) ;while true do if (((1312 + 712)>(157 + 455)) and (((1410 + 355) -(445 + 1320))==v290)) then v223=0 -(0 + 0) ;v224=nil;v290=1 + 0 ;end if ((((9074 -4267) -(1488 + 219))<(3002 + 444)) and (v290==(1 -0))) then v222=1;break;end end end if ((v222==(3 -1)) or ((6179 -(149 + 240 + 1142))<(74 + 31))) then while true do if ((v223==0) or ((776 -(382 + 221))==4058)) then local v298=0 + 0 ;while true do if (((6799 -4557)<=(8500 -3585)) and (v298==(0 + 0))) then v224=v87[v94[6 -3 ]];v225=nil;v298=1 + 0 ;end if (((18 + 755 + 636)<(5366 -2994)) and (v298==(2 -1))) then v223=2 -1 ;break;end end end if ((v223==(7 -5)) or ((5356 -(420 + 705))<=(1072 + 1146))) then for v309=898 -(141 + 756) ,v94[1497 -(359 + 1134) ] do local v310=0 -0 ;local v311;local v312;local v313;while true do if ((v310==((217 -(139 + 77)) + 0)) or (4511<=(4868 -3504))) then v313=nil;while true do if (((1967 + 1451)<=(11847 -7539)) and (v311==(3 -2))) then while true do if ((v312==(740 -(736 + 3))) or ((8002 -4884)>(1673 + (7288 -4340)))) then if (((486 + 3510)==(7952 -3956)) and (v313[1 + 0 ]==((154 -72) -56))) then v226[v309-(1 + 0) ]={v92,v313[8 -5 ]};else v226[v309-(1955 -(632 + 1322)) ]={v40,v313[3 + 0 ]};end v91[ #v91 + (2 -1) ]=v226;break;end if ((v312==(0 -0)) or (3998<(1411 -1100))) then local v344=0 -0 ;local v345;while true do if (((4505 -(273 + 763))==(11519 -8050)) and (v344==((500 -(187 + 313)) -0))) then v345=0 + 0 ;while true do if ((v345==(124 -(59 + 64))) or ((5878 -(4817 -1438))<(1538 -(1143 + 84)))) then v312=242 -(62 + 179) ;break;end if (((2338 -1671)<=4878) and (v345==(0 + 0))) then local v356=137 -(56 + 81) ;while true do if ((3990>=(3036 -1164)) and (v356==(0 + 0))) then v78=v78 + (2 -(1870 -(1114 + 755))) ;v313=v86[v78];v356=(432 -(186 + 245)) + 0 ;end if (((9473 -5745)>(604 + 2474)) and (v356==((604 -(151 + 451)) -1))) then v345=1 -0 ;break;end end end end break;end end end end break;end if (((4733 -(293 + 31))>=(3426 -(440 + 533))) and (v311==0)) then v312=888 -(729 + 61 + 98) ;v313=nil;v311=1929 -(31 + 1897) ;end end break;end if ((v310==((2221 -(228 + 236)) -(847 + 910))) or ((8130 -5359)==(3462 + 746))) then v311=20 -(11 + 9) ;v312=nil;v310=1 + 0 ;end end end v92[v94[5 -(13 -10) ]]=v30(v224,v225,v41);break;end if (((192 + 299)<(17079 -12396)) and ((953 -(561 + 391))==v223)) then local v300=0;while true do if ((v300==(1802 -(148 + 1653))) or ((4006 -(168 + 249))<(2039 + 142))) then v223=1 + 1 ;break;end if ((v300==(0 -0)) or ((814 + 2607)<((4613 -(533 + 361)) -1467))) then v226={};v225=v10({},{__index=function(v319,v320)local v321=0 + 0 ;local v322;local v323;while true do if ((v321==0) or ((2436 -(778 + (2093 -(1764 + 207))))<=(442 -((366 -236) + 172)))) then v322=0 + 0 ;v323=nil;v321=434 -(258 + 175) ;end if (((2 -1)==v321) or (496>(1263 + 223))) then while true do if (((2861 -(298 + 54))==((1052 -751) + 2208)) and (v322==(0 -0))) then v323=v226[v320];return v323[1 + 0 ][v323[1 + 1 ]];end end break;end end end,__newindex=function(v324,v325,v326)local v327=0 -0 ;local v328;local v329;while true do if ((v327==(0 -0)) or ((1314 + 1163)<=1275)) then v328=514 -((154 -114) + 474) ;v329=nil;v327=3 -2 ;end if (((9061 -4411)==(2206 + 2444)) and (v327==(1 + (1019 -(262 + 757))))) then while true do if (((2243 + 1028)<=(6719 -(1611 + 104 + 227))) and (v328==(409 -(233 + (555 -(324 + 55)))))) then v329=v226[v325];v329[1978 -(1406 + (1289 -718)) ][v329[6 -4 ]]=v326;break;end end break;end end end});v300=1042 -(864 + 177) ;end end end end break;end if (((1538 + (4082 -2688))==2932) and (v222==(2 -1))) then v225=nil;v226=nil;v222=8 -6 ;end end break;end if ((v221==(3 -2)) or ((9744 -5248)<=(42 + 395))) then v224=nil;v225=nil;v221=4 -(649 -(395 + 252)) ;end end else v92[v94[3 -(1090 -(191 + 898)) ]]=v94[568 -(517 + 48) ]~=(567 -(335 + 232)) ;end v78=v78 + 1 ;break;end end break;end end end end v77=3;end if (v77==1) then v80={...};v81=v12("#",...) -1 ;v77=2;end end end;end end end return v30(v29(),{},v17)(...);end if (v18==2) then function v22()local v46=0;local v47;while true do if (v46==(782 -(324 + 457))) then return v47;end if (v46==((0 -0) + 0)) then v47=v1(v16,v19,v19);v19=v19 + 1 + 0 ;v46=22 -((12 -7) + 16) ;end end end v23=nil;function v23()local v48=0 -0 ;local v49;local v50;while true do if (v48==(3 -2)) then return (v50 * 256) + v49 ;end if (v48==(0 + 0)) then v49,v50=v1(v16,v19,v19 + 1 + 1 );v19=v19 + 1 + (2 -1) ;v48=1484 -(1458 + 25) ;end end end v18=3;end if (v18==3) then v24=nil;function v24()local v51,v52,v53,v54=v1(v16,v19,v19 + (5 -(1 + 1)) );v19=v19 + (5 -1) ;return (v54 * (43192249 -26415033)) + (v53 * (326633 -261097)) + (v52 * (841 -(48 + 537))) + v51 ;end v25=nil;v18=4;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v55)if (v1(v55,2)==79) then local v69=0;while true do if (v69==0) then v20=v0(v3(v55,1,1));return "";end end else local v70=v2(v0(v55,16));if v20 then local v83=v5(v70,v20);v20=nil;return v83;else return v70;end end end);v18=1;end if (v18==1) then v21=nil;function v21(v56,v57,v58)if v58 then local v71=(v56/(2^(v57-(1 + 0))))%((3 -1)^(((v58-(1 + (919 -(214 + 705)))) -(v57-((467 + 567) -(5 + 275 + 753)))) + 1 + (1136 -(762 + 374)))) ;return v71-(v71%(3 -(374 -(344 + 28)))) ;else local v72=(1 + 1)^(v57-(2 -(768 -(64 + 703)))) ;return (((v56%(v72 + v72))>=v72) and (1 + 0)) or (0 -0) ;end end v22=nil;v18=2;end if (v18==4) then function v25()local v59=v24();local v60=v24();local v61=2 -(2 -1) ;local v62=(v21(v60,1428 -((2114 -(1435 + 125)) + 873) ,409 -(45 + 344) ) * (2^(60 -28))) + v59 ;local v63=v21(v60,83 -62 ,87 -(5 + 51) );local v64=((v21(v60,73 -41 )==(1649 -(554 + 1094))) and  -(1013 -(496 + 516))) or (3 -2) ;if (v63==(0 -0)) then if (v62==(0 -0)) then return v64 * 0 ;else v63=1;v61=0;end elseif (v63==2047) then return ((v62==(0 + 0)) and (v64 * ((4 -(679 -(630 + 46)))/(751 -(402 + 349))))) or (v64 * NaN) ;end return v8(v64,v63-(1019 + 4) ) * (v61 + (v62/((2 -0)^(125 -73)))) ;end v26=nil;function v26(v65)local v66=0 + 0 ;local v67;local v68;while true do if (v66==(0 -0)) then v67=nil;if  not v65 then v65=v24();if (v65==((900 -(318 + 582)) -0)) then return "";end end v66=1;end if (((6 -3) -1)==v66) then v68={};for v84=1, #v67 do v68[v84]=v2(v1(v3(v67,v84,v84)));end v66=3 -0 ;end if (v66==3) then return v6(v68);end if ((1810 -(1770 + 35 + 4))==v66) then v67=v3(v16,v19,(v19 + v65) -((13 -9) -3) );v19=v19 + v65 ;v66=2 + 0 ;end end end v18=5;end end end v15("LOL!",v9(),...);end
